■目的/機能
サウンドミクサー
音の可視化
音データの圧縮
フィルターやエフェクトでパターンが違う音の生成
モード切替 DirectX(XAudio2)対応・OpenAL対応
音/特殊データの書き出し
特殊データで作業の復元
自動化(サウンドバンクから一括処理)
音量の正規化

■プラットフォーム
Windows

■制作順番
①音の可視化
②サウンドミクサー
③音/特殊データの書き出し
④特殊データで作業の復元

■利用API・ライブラリ
Win32
CUDA
DirectX11
XAudio2
OpenGL(実装予定)
OpenAL(実装予定)
STB

■規約
・60fps～120fps(マイPC)

■メモ
①音の可視化(9月まで)
　・再生??
　　・別画面?(C++が使えるGUI??)
　　　・WPFを諦める
　　　・C++ GUI????
　　　　・why dont DX11+ImGui???
　・レンダリングツール
　　・IMGUI+DX11
　・FFT
　　・参考:https://qiita.com/takesyhi/items/a0f03447bb893c9ab937
　・ボタン画像・素材
　　・テクスチャベース(親クラス)
　　　・機能
　　　　・テクスチャローダー
　・いよいよXAudio2の導入
　　・サウンドベース
　　　・テクスチャベースと同じ設計
　　　・保存するものが違うだけ(できるだけ多くの情報を保存する)
　　　　・名前
　　　　・サイズ
　　　　・バイナリデータ(RIFF・FMT・DATA)
　　　　　・後回し ADPCMのバイナリデータ
　　　　・考え中
　・XAudio2Manager
　　・機能
　　　・再生・一時停止
　　　・考え中(多すぎるから後回し)
　・プロット
　　・ImGuiのプロットはfloatのみ対応+重い
　　・DirectX11のみでやってみよう！
　　　・D3DXCreateLine
　　　・プロットは別画面を用意する
　　　　・詳細プロットみたい
　　　・簡単な波形(200～300サンプリング数)ならImGuiで描画してもいいかも
　　　　・1フレームで読み込むのが大変だから、分けてやろうか？
　　　　　・時間かかりすぎた…
　　　・必殺技！！！！！！CUDA
　　　　・問題なさそう
　　　　・やっぱり描画する時が若干重い

②サウンドミクサー
　・リサンプリング(最適化)44100 or 48000
　・クロスフェード
　　・チェック入れたサウンドのみ処理される
　　　・同じサンプリングじゃないとできない
　　・新しいパネルで処理される
　　・流れ
　　　・チェック入れたサウンドはパネルに表示される
　　　　・順番を選択する[IMGUIプルダウン]
　　　　　・リスト構造が必要
　　　　　　・チェック入れたら最後へ
　　　　　　　・そして好きな順番に入れる stl::insert
　　　　・スライダー(フェードアウト位置と時間・フェードイン位置と時間)
　　　　